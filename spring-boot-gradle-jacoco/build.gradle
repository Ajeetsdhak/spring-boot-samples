buildscript {
    ext {
        springBootVersion = '2.0.3.RELEASE'
    }
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: "jacoco"
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.samaddico'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}


dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')

    runtime('com.h2database:h2')

    testCompile group: 'org.mockito', name: 'mockito-all', version: '1.9.5'
    testCompile group: 'com.jayway.restassured', name: 'spring-mock-mvc', version: '2.4.0'
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

test {
    ignoreFailures = true
    jacoco {
        append = false
        destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
        classDumpDir = file("$buildDir/jacoco/classpathdumps")
    }
}

jacocoTestReport {
    group = "Reporting"
    reports {
        xml.enabled true
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
    executionData(test)
}


jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.6
            }
        }
    }
}

// to run coverage verification during the build
check.dependsOn jacocoTestCoverageVerification
